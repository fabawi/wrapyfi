name: Code Coverage

on: 
  workflow_dispatch:

jobs:
  run-containers:
    runs-on: ubuntu-latest
    steps:
    # Step 1: Pull Docker Images
    - name: Pull Docker Image DockA
      run: docker pull modularml/wrapyfi:0.4.32-zeromq-yarp-ros2
    - name: Pull Docker Image DockB
      run: docker pull modularml/wrapyfi:0.4.32-zeromq-ros

    # Step 2: Run YARP and ROS servers
    - name: Run DockA with YARP server
      run: docker run --name wrapyfi_zeromq_yarp_ros2 --net host --rm -dit -v shared_volume:/shared_volume modularml/wrapyfi:0.4.32-zeromq-yarp-ros2 yarpserver
    - name: Run DockB with ROS server
      run: docker run --name wrapyfi_zeromq_ros --net host --rm -dit -v shared_volume:/shared_volume modularml/wrapyfi:0.4.32-zeromq-ros roscore

    # Step 3: Create shared volume (assuming the volume is named shared_volume)
    - name: Create a shared volume
      run: docker volume create shared_volume

    # Step 4 & 5: Install packages, run tests, and append coverage data
    - name: Run tests and append coverage on DockA
      run: |
        docker exec wrapyfi_zeromq_yarp_ros2 /bin/bash -c "\
          pip install coverage && \
          coverage run -a --source=wrapyfi -m unittest discover -s wrapyfi --data-file=/shared_volume/.coverage"
    - name: Run tests and append coverage on DockB
      run: |
        docker exec wrapyfi_zeromq_ros /bin/bash -c "\
          pip install coverage && \
          coverage run -a --source=wrapyfi -m unittest discover -s wrapyfi --data-file=/shared_volume/.coverage"

    # Step 6: Generate the final report from the combined .coverage file
    - name: Generate coverage report
      run: |
        docker run --rm -v shared_volume:/shared_volume modularml/wrapyfi:0.4.32-zeromq-yarp-ros2 /bin/bash -c "\
          coverage report --data-file=/shared_volume/.coverage && \
          coverage xml -o /shared_volume/coverage.xml"

    # Step 7: Upload the coverage report
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: /shared_volume/coverage.xml
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
