Commands for Running Examples
=============================

# Directory structure
~/Code/wrapyfi
├── wrapyfi
│   ├── docs
│   ├── examples
│   └── wrapyfi
├── wrapyfi-examples_ESR9
│   ├── controller
│   ├── media
│   ├── model
│   └── wrapyfi_configs
└── wrapyfi-interfaces
    └── wrapyfi_interfaces

# To kill something that Ctrl+C won't kill use Ctrl+Alt+C or...
Ctrl+Z
kill -SIGTERM %1

-----------------------------------------------------------------------------------------

# Leave running in a separate terminal before running any example
yarpserver
roscore

# Run first in every new terminal that you open (adjust paths!)
cd ~/Code/wrapyfi && conda activate yarp && export PYTHONPATH=~/Code/wrapyfi/wrapyfi:/opt/ros/noetic/lib/python3/dist-packages

# Run hello world example
python3 wrapyfi/examples/hello_world.py --publish  [--mware ros]
python3 wrapyfi/examples/hello_world.py --listen  [--mware ros]

# Run encapsulation example
python3 wrapyfi/examples/encapsulation.py --publish  [--mware ros]
python3 wrapyfi/examples/encapsulation.py --listen  [--mware ros]

# Run object notify example
python3 wrapyfi/examples/object_notify.py --mode publish  [--mware ros]
python3 wrapyfi/examples/object_notify.py --mode listen  [--mware ros]

# Run torch tensor example
python3 wrapyfi/examples/torch_tensor.py --mode publish  [--mware ros]
python3 wrapyfi/examples/torch_tensor.py --mode listen  [--mware ros]

# Run camera example
python3 wrapyfi/examples/cam_mic.py --mode publish --stream video --img-source 0  [--mware ros]
python3 wrapyfi/examples/cam_mic.py --mode listen --stream video  [--mware ros]

# Run audio example
python3 wrapyfi/examples/cam_mic.py --mode publish --stream audio --aud-source 0  [--mware ros]
python3 wrapyfi/examples/cam_mic.py --mode listen --stream audio  [--mware ros]

-----------------------------------------------------------------------------------------

# Build the Pepper ROS docker image
cd ~/Code/Pepper/pepper-ros-docker
docker build . -t minimal-pepper-ros-driver
# CHECK: docker image ls
# UNDO:  docker image rm minimal-pepper-ros-driver

# Run the Pepper ROS docker image
docker run -it --network host minimal-pepper-ros-driver:latest
# MOUNT VOLUME: For example: docker run -it --network host -v ~/Code/Pepper/PepperDemo:/PepperDemo minimal-pepper-ros-driver:latest
# CHECK:     docker ps -a
# RESTART:   docker start NAME
# NEW BASH:  docker exec -it NAME bash -i
# COPY FILE: docker cp ~/Code/Pepper/pepper-ros-docker/pepper_extra/. NAME:/catkin_ws/src/pepper_extra/
# RECOMPILE: docker exec -it NAME /bin/bash -c 'source /opt/ros/kinetic/setup.bash && cd /catkin_ws && catkin_make'
# UNDO:      docker stop NAME
# UNDO:      docker rm NAME

# Compile host PC Pepper workspace
cd ~/Code/Pepper/pepper_ros_ws && catkin build
source ~/Code/Pepper/pepper_ros_ws/devel/setup.bash

# Set up Pepper for wrapyfi
# PEPPER: Open back of head and plug in ethernet cable
# PEPPER: Turn on the robot
# HOST PC: roscore
# DOCKER:  export ROS_MASTER_URI=http://wtmpc611:11311
# DOCKER:  roslaunch pepper_extra pepper_wrapyfi.launch ip:=134.100.10.173
# HOST PC: source ~/Code/Pepper/pepper_ros_ws/devel/setup.bash
# HOST PC: rosservice call /pepper/pose/idle_mode "{idle_enabled: false, breath_enabled: false}"
# HOST PC: rosservice call /pepper/pose/home

# Run Pepper interface
cd ~/Code/wrapyfi && conda activate yarp && export PYTHONPATH=~/Code/wrapyfi/wrapyfi-interfaces:~/Code/wrapyfi/wrapyfi:/opt/ros/noetic/lib/python3/dist-packages
source ~/Code/Pepper/pepper_ros_ws/devel/setup.bash
# Fake facial expressions
	python3 wrapyfi-interfaces/wrapyfi_interfaces/robots/pepper/interface.py --get_cam_feed --control_expressions --set_facial_expressions
# Receive facial expressions from topic
	python3 wrapyfi-interfaces/wrapyfi_interfaces/robots/pepper/interface.py --get_cam_feed --control_expressions --headless

# Run WoZ4U
cd ~/Code/Pepper/WoZ4U
conda activate naoqi
python server.py  # <-- Ctrl+C to stop
xdg-open http://0.0.0.0:5000
